{"name":"get continents names","id":"as-user-i-want-to-know-the-continents-names-so-that-i-can-know-more-about-the-world;get-continents-names","scenarioId":"get_continents_info:get continents names","methodName":"get continents names","testSteps":[{"number":1,"description":"Given the user is connected to the service","duration":530,"startTime":"2024-11-06T11:39:19.167538600-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"level":0,"children":[{"number":2,"description":"User connect to","duration":263,"startTime":"2024-11-06T11:39:19.421536300-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"level":1}]},{"number":3,"description":"When the user gets the continents information","duration":1827,"startTime":"2024-11-06T11:39:19.699516300-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"level":0,"children":[{"number":4,"description":"User consume the","duration":1812,"startTime":"2024-11-06T11:39:19.706518700-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":5,"description":"user executes a GET on the resource /continents","duration":1731,"startTime":"2024-11-06T11:39:19.779032300-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"level":2,"children":[{"number":6,"description":"GET https://dummy-json.mock.beeceptor.com/continents","duration":0,"startTime":"2024-11-06T11:39:21.510416200-05:00[America/Bogota]","result":"SUCCESS","restQuery":{"method":"GET","path":"https://dummy-json.mock.beeceptor.com/continents","content":"","contentType":"application/json","requestHeaders":"Accept\u003d*/*\r\n\t\t\t\tContent-Type\u003dapplication/json","requestCookies":"","responseHeaders":"Access-Control-Allow-Origin: *\r\nAlt-Svc: h3\u003d\":443\"; ma\u003d2592000\r\nContent-Length: 2013\r\nContent-Type: application/json\r\nDate: Wed, 06 Nov 2024 16:39:23 GMT\r\nVary: Accept-Encoding\r\nX-Beeceptor-Rule-Id: 1y7akc8rdlgi\r","responseCookies":"\r","responseBody":"[\n    {\n        \"code\": \"AF\",\n        \"name\": \"Africa\",\n        \"areaSqKm\": 30370000,\n        \"population\": 1340598000,\n        \"lines\": [\n            \"Equator\",\n            \"Prime Meridian\"\n        ],\n        \"countries\": 54,\n        \"oceans\": [\n            \"Atlantic Ocean, Indian Ocean\"\n        ],\n        \"developedCountries\": [\n            \"South Africa\",\n            \"Egypt\",\n            \"Nigeria\"\n        ]\n    },\n    {\n        \"code\": \"AN\",\n        \"name\": \"Antarctica\",\n        \"areaSqKm\": 14000000,\n        \"population\": 1000,\n        \"lines\": [\n            \"Antarctic Circle\",\n            \"180th Meridian\"\n        ],\n        \"countries\": 0,\n        \"oceans\": [\n            \"Southern Ocean\"\n        ],\n        \"developedCountries\": [\n            \n        ]\n    },\n    {\n        \"code\": \"AS\",\n        \"name\": \"Asia\",\n        \"areaSqKm\": 44579000,\n        \"population\": 4641055000,\n        \"lines\": [\n            \"Equator\",\n            \"Tropic of Cancer\"\n        ],\n        \"countries\": 49,\n        \"oceans\": [\n            \"Indian Ocean\",\n            \"Pacific Ocean\"\n        ],\n        \"developedCountries\": [\n            \"Japan\",\n            \"South Korea\",\n            \"Singapore\",\n            \"United Arab Emirates\"\n        ]\n    },\n    {\n        \"code\": \"EU\",\n        \"name\": \"Europe\",\n        \"areaSqKm\": 10180000,\n        \"population\": 747636000,\n        \"lines\": [\n            \"Prime Meridian\",\n            \"Arctic Circle\"\n        ],\n        \"countries\": 44,\n        \"oceans\": [\n            \"Atlantic Ocean\",\n            \"Arctic Ocean\"\n        ],\n        \"developedCountries\": [\n            \"Germany\",\n            \"United Kingdom\",\n            \"France\",\n            \"Italy\",\n            \"Spain\"\n        ]\n    },\n    {\n        \"code\": \"NA\",\n        \"name\": \"North America\",\n        \"areaSqKm\": 24709000,\n        \"population\": 579750000,\n        \"lines\": [\n            \"Tropic of Cancer\",\n            \"Arctic Circle\"\n        ],\n        \"countries\": 23,\n        \"oceans\": [\n            \"Atlantic Ocean\",\n            \"Pacific Ocean\",\n            \"Arctic Ocean\"\n        ],\n        \"developedCountries\": [\n            \"United States\",\n            \"Canada\",\n            \"Mexico\"\n        ]\n    },\n    {\n        \"code\": \"OC\",\n        \"name\": \"Oceania\",\n        \"areaSqKm\": 8500000,\n        \"population\": 43155000,\n        \"lines\": [\n            \"Tropic of Capricorn\",\n            \"180th Meridian\"\n        ],\n        \"countries\": 14,\n        \"oceans\": [\n            \"Pacific Ocean\"\n        ],\n        \"developedCountries\": [\n            \"Australia\",\n            \"New Zealand\"\n        ]\n    },\n    {\n        \"code\": \"SA\",\n        \"name\": \"South America\",\n        \"areaSqKm\": 17840000,\n        \"population\": 426768000,\n        \"lines\": [\n            \"Equator\",\n            \"Tropic of Capricorn\"\n        ],\n        \"countries\": 12,\n        \"oceans\": [\n            \"Atlantic Ocean\",\n            \"Pacific Ocean\"\n        ],\n        \"developedCountries\": [\n            \"Brazil\",\n            \"Argentina\",\n            \"Chile\"\n        ]\n    }\n]","statusCode":200},"precondition":false,"level":3}]}]}]},{"number":7,"description":"Then the user can see the continents names","duration":542,"startTime":"2024-11-06T11:39:21.528412200-05:00[America/Bogota]","result":"FAILURE","precondition":false,"level":0,"children":[{"number":8,"description":"A valid response is returned","duration":445,"startTime":"2024-11-06T11:39:21.608411800-05:00[America/Bogota]","exception":{"errorType":"java.lang.AssertionError","message":"1 expectation failed.\nJSON path [3].name doesn\u0027t match.\nExpected: Europa\n  Actual: Europe\n","stackTrace":[{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":696},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"this$2$validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":-1},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"body","fileName":"ResponseSpecificationImpl.groovy","lineNumber":270},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"body","fileName":"ResponseSpecificationImpl.groovy","lineNumber":117},{"declaringClass":"io.restassured.internal.ValidatableResponseOptionsImpl","methodName":"body","fileName":"ValidatableResponseOptionsImpl.java","lineNumber":244},{"declaringClass":"co.com.udea.calidad.gestionEquipajes.stepdefinitions.ContinentsStepDefinition","methodName":"lambda$theUserCanSeeTheContinentsNames$0","fileName":"ContinentsStepDefinition.java","lineNumber":39},{"declaringClass":"co.com.udea.calidad.gestionEquipajes.stepdefinitions.ContinentsStepDefinition","methodName":"theUserCanSeeTheContinentsNames","fileName":"ContinentsStepDefinition.java","lineNumber":35},{"declaringClass":"worker.org.gradle.process.internal.worker.GradleWorkerMain","methodName":"run","fileName":"GradleWorkerMain.java","lineNumber":69},{"declaringClass":"worker.org.gradle.process.internal.worker.GradleWorkerMain","methodName":"main","fileName":"GradleWorkerMain.java","lineNumber":74}]},"result":"FAILURE","precondition":false,"level":1}]}],"userStory":{"id":"get_continents_info","storyName":"As user I want to know the continents names so that I can know more about the world","displayName":"As user I want to know the continents names so that I can know more about the world","path":"get_continents_info","pathElements":[{"name":"get_continents_info","description":""}],"type":"feature"},"title":"get continents names","description":"","startTime":"2024-11-06T11:39:19.073539700-05:00[America/Bogota]","duration":610,"testFailureCause":{"errorType":"java.lang.AssertionError","message":"1 expectation failed.\nJSON path [3].name doesn\u0027t match.\nExpected: Europa\n  Actual: Europe\n","stackTrace":[{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":696},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"this$2$validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":-1},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"body","fileName":"ResponseSpecificationImpl.groovy","lineNumber":270},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"body","fileName":"ResponseSpecificationImpl.groovy","lineNumber":117},{"declaringClass":"io.restassured.internal.ValidatableResponseOptionsImpl","methodName":"body","fileName":"ValidatableResponseOptionsImpl.java","lineNumber":244},{"declaringClass":"co.com.udea.calidad.gestionEquipajes.stepdefinitions.ContinentsStepDefinition","methodName":"lambda$theUserCanSeeTheContinentsNames$0","fileName":"ContinentsStepDefinition.java","lineNumber":39},{"declaringClass":"co.com.udea.calidad.gestionEquipajes.stepdefinitions.ContinentsStepDefinition","methodName":"theUserCanSeeTheContinentsNames","fileName":"ContinentsStepDefinition.java","lineNumber":35},{"declaringClass":"worker.org.gradle.process.internal.worker.GradleWorkerMain","methodName":"run","fileName":"GradleWorkerMain.java","lineNumber":69},{"declaringClass":"worker.org.gradle.process.internal.worker.GradleWorkerMain","methodName":"main","fileName":"GradleWorkerMain.java","lineNumber":74}]},"testFailureClassname":"java.lang.AssertionError","testFailureMessage":"1 expectation failed.\nJSON path [3].name doesn\u0027t match.\nExpected: Europa\n  Actual: Europe\n","testFailureSummary":"FAILURE;java.lang.AssertionError;1 expectation failed.\nJSON path [3].name doesn\u0027t match.\nExpected: Europa\n  Actual: Europe\n;ResponseSpecificationImpl.groovy","projectKey":"","annotatedResult":"FAILURE","isManualTestingUpToDate":false,"manual":false,"testSource":"Cucumber","actors":[{"name":"user","can":["browse the web","call an API at https://dummy-json.mock.beeceptor.com"]}],"order":0,"result":"FAILURE"}